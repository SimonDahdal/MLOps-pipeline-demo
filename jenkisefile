pipeline {
    agent any

    stages {
        stage('Train model') {
            steps {
                sh '''
                    source "$HOME_USER/Notebooks/py-envs/venv1/bin/activate"
                    cd $HOME_USER/Projects/MLOps_demo/Training
                    echo `pwd`
                    echo `which python`
                    python $HOME_USER/Projects/MLOps_demo/Training/train.py
                   '''
            }
        }
        
        stage('save model to BentoML local store') {
            steps {
                sh '''
                    bash $HOME_USER/Projects/MLOps_demo/backup_models.sh
                   '''
            }
        }
        
        stage('Test model') {
            steps {
                sh '''
                    source $HOME_USER/Notebooks/py-envs/venv1/bin/activate
                    cd $HOME_USER/Projects/MLOps_demo/Testing_performance
                    echo `pwd`
                    echo `which python`
                    python  $HOME_USER/Projects/MLOps_demo/Testing_performance/test_model.py
                   '''
            }
        }
        
        stage('Dockerizing Model with BentoML ') {
            steps {
                sh '''
                    echo 'Ciao' 
                    cd $HOME_USER/Projects/MLOps_demo/Containerizing_Mode
                    echo `pwd`
                    bash $HOME_USER/Projects/MLOps_demo/Containerizing_Mode/Model_abalone_containerizing.sh
                   '''
            }
        }
      
        stage('Push Image to Private Registry') {
            steps {
                sh '''
                    source $HOME_USER/Notebooks/py-envs/venv1/bin/activate
                    cd $HOME_USER/Projects/MLOps_demo/Containerizing_Mode
                    echo `pwd`
                    bash $HOME_USER/Projects/MLOps_demo/Containerizing_Mode/pushdocker_latest.sh
                   '''
            }
        }
        
    }
    
}

